server.port=0
sb.inclass.db.name="default db ipaddress"

spring.application.name=employee-service

#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect


#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console

# Database configuration
spring.datasource.url=jdbc:mysql://localhost:3306/JCByBharath
spring.datasource.username=root
spring.datasource.password=JCBharath@2023

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# Hibernate configuration
spring.jpa.hibernate.ddl-auto=update

#create, create-drop (testing), validate, none, update

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

app.university.host =http://employee-education-service
#app.university.host =http://localhost:10001
app.universities.url=/api/v1/university/getAllUniversities
app.add.university.url=/api/v1/university/addUniversity

app.get.university.id.url=/api/v1/university/getUniversityById
app.get.university.address.name.url=/api/v1/university/getUniversityAddressByName

logging.level.root = info

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
#eureka.client.fetch-service-registry=false
#eureka.client.register-with-eureka=false

eureka.instance.hostname=localhost
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.instance.leaseRenewalIntervalInSeconds=10

resilience4j.circuitBreaker.instances.employeeService.registerHealthIndicator=true
resilience4j.circuitBreaker.instances.employeeService.eventConsumerBufferSize=10

resilience4j.circuitBreaker.instances.employeeService.failureRateThreshold=50
resilience4j.circuitBreaker.instances.employeeService.minimumNumberOfCalls=5

resilience4j.circuitBreaker.instances.employeeService.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitBreaker.instances.employeeService.waitDurationInOpenState=5s

resilience4j.circuitBreaker.instances.employeeService.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitBreaker.instances.employeeService.slidingWindowSize=10
resilience4j.circuitBreaker.instances.employeeService.slidingWindowType=COUNT_BASED

management.health.circuitBreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always